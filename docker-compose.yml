version: '2'

services:
  nginx:
    build: ./nginx/
    ports:
      - "8000:443"
    volumes_from:
      - web
      - nginx_data
    links:
      - web:web
    networks:
      static-network:
        ipv4_address: 172.25.0.2

  postgres:
    image: postgres:latest
    volumes_from:
      - pg_data
    volumes:
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    env_file:
      - env
    expose:
      - "54322"
    ports:
      - "54322:5432"
    networks:
      static-network:
        ipv4_address: 172.25.0.3

  web:
    build: .
    env_file: env
    expose:
      - "8888"
    links:
      - postgres:postgres
    volumes_from:
      - web_data
    volumes:
      - .:/app
    command: gunicorn EcoAlpsWater_.wsgi:application -w 2 -b :8888 --timeout 1200
    networks:
      static-network:
        ipv4_address: 172.25.0.4

  pg_data:
    restart: always
    image: alpine
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    command: "true"
    networks:
      static-network:
        ipv4_address: 172.25.0.11

  web_data:
    restart: always
    image: alpine
    volumes:
      - /app
      - ./sequence_upload:/var/www/upload
      - ./sequence_vault:/var/www/vault
      - ./sequence_download:/var/www/download
    command: "true"
    networks:
      static-network:
        ipv4_address: 172.25.0.12

  nginx_data:
    restart: always
    image: alpine
    volumes:
      - ./sequence_upload:/var/www/upload
      - ./sequence_vault:/var/www/vault
      - ./sequence_download:/var/www/download
    command: "true"
    networks:
      static-network:
        ipv4_address: 172.25.0.14

networks:
  static-network:
    ipam:
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1
